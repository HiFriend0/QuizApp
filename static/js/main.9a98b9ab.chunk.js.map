{"version":3,"sources":["logo.svg","QuizQuestionButton.js","QuizQuestion.js","QuizEnd.js","Quiz.js","UpdateQuiz.js","Home.js","First.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","QuizQuestionButton","props","state","this","clickHandler","button_text","Button","variant","color","onClick","handleClick","bind","Component","QuizQuestion","incorrectAnswer","buttonText","quiz_question","answer","showNextQuestionHandler","setState","instruction_text","className","answer_options","map","item","index","key","QuizEnd","resetClickHandler","href","handleResetClick","quizData","require","Quiz","quiz_position","quiz_data1","isQuizEnd","quiz_questions","length","showNextQuestion","UpdateQuiz","addItem","TabPanel","children","value","other","role","hidden","id","aria-labelledby","Box","p","Typography","a11yProps","LinkTab","Tab","component","event","preventDefault","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","NavTabs","classes","React","useState","setValue","AppBar","position","Tabs","onChange","newValue","aria-label","label","quiz_data_global","Home","App","First","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9a98b9ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\n\nclass QuizQuestionButton extends Component {\n\n    constructor(props){\n        \n        super(props);\n        this.state={\n               \n        }\n      }\n\n       handleClick(){\n        this.props.clickHandler(this.props.button_text);\n         \n    }\n    \n    render(props) {\n\n       \n\n      return (\n            <li>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleClick.bind(this)} > \n            { this.props.button_text}\n            </Button>\n            </li>\n \n        )\n    }\n\n  }\n\nexport default QuizQuestionButton","import React, { Component } from 'react'\nimport QuizQuestionButton from './QuizQuestionButton'\n\nclass QuizQuestion extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            incorrectAnswer: false\n        }\n      }\n\n       handleClick(buttonText)\n       {\n        if ( buttonText === this.props.quiz_question.answer) {\n          this.props.showNextQuestionHandler() ;\n          \n          this.setState(state => ({\n            incorrectAnswer : false\n          }));\n\n        }\n        else \n        {\n\n        this.setState(state => ({\n            incorrectAnswer : true\n          }));\n\n       }\n      }\n\n\n     \n \n    render() {\n     \n   return (\n\n        <main>\n\n        <section>\n          <p>{this.props.quiz_question.instruction_text}</p>\n        </section>\n       \n        <section className=\"buttons\">\n          <ul>\n          {\n            this.props.quiz_question.answer_options.map((item,index) => (\n            <QuizQuestionButton  clickHandler = {this.handleClick.bind(this)} key= {index} button_text = {item}></QuizQuestionButton>\n            ))\n         }\n         </ul>\n        </section>\n       \n       <div>\n\n       { this.state.incorrectAnswer ? <p className='error'> Sorry, that's not right </p> :  null}\n       </div>\n      \n      </main>\n        \n       )\n    }\n\n  }\n\nexport default QuizQuestion","import React, { Component } from 'react'\n\nclass QuizEnd extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n               \n        }\n      }\n\n      handleResetClick(){\n        this.props.resetClickHandler();\n\n      }\n    \n      render() {\n\n      return (\n        <div>\n        <p>Thanks for playing!</p>\n        <a href=''  onClick ={this.handleResetClick.bind(this) }>Reset Quiz</a>\n      </div>\n             )\n    }\n\n  }\n\nexport default QuizEnd","import React, { Component } from 'react'\nimport QuizQuestion from './QuizQuestion'\nimport QuizEnd from './QuizEnd'\n \nlet quizData = require('./quiz_data.json')\n\nclass Quiz extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n             quiz_position : 1,\n             quiz_data1 : quizData\n        }\n      }\n\n        showNextQuestion(){\n\n        this.setState(state => ({\n          quiz_position : state.quiz_position +1 \n        }));\n  \n      }\n\n      handleResetClick(){\n        this.setState(state => ({\n          quiz_position : 1 \n        }))\n\n      }\n\n      addItem(){\n\n        const {quiz_data1} =this.state ; \n    \n        const newObject  = {\n          \n            \"id\": 6,\n            \"instruction_text\": \"Q2 : How many continents are there on Planet Earth?\",\n            \"answer_options\": [\"5\", \"6\", \"7\", \"8\"],\n            \"answer\": \"7\"\n         }\n    \n      this.setState( {\n          quiz_data1 : [...this.state.quiz_data1,newObject]\n        } )\n    \n      }\n\n      \n    render(props) {\n\n      const isQuizEnd = ((this.state.quiz_position-1) === this.state.quiz_data1.quiz_questions.length) ;\n     // let our_component ;\n\n/*\n      if (!isQuizEnd) {\n        our_component = <QuizQuestion quiz_question={quizData.quiz_questions[this.state.quiz_position-1]} />\n\n      }\n       else {\n        our_component =  <QuizEnd />\n\n      }*/\n\n      return (\n <div>\n       \n\n          <div>\n          {\n            isQuizEnd ?  <QuizEnd resetClickHandler={this.handleResetClick.bind(this)} /> : <QuizQuestion showNextQuestionHandler={this.showNextQuestion.bind(this)} quiz_question={this.state.quiz_data1.quiz_questions[this.state.quiz_position-1]} />\n\n          }\n          </div>\n</div>\n         \n         )\n    }\n\n  }\n\nexport default Quiz","import React, { Component } from 'react'\n\nlet quizData = require('./quiz_data.json')\n\nclass UpdateQuiz extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n             quiz_position : 1,\n             quiz_data1 : quizData\n        }\n      }\n  \n   addItem(){\n\n    const quiz_data1 =this.state.quiz_data1 ; \n\n    const newObject  = { \n        \"id\": 6,\n        \"instruction_text\": \"Q2 : How many continents are there on Planet Earth?\",\n        \"answer_options\": [\"5\", \"6\", \"7\", \"8\"],\n        \"answer\": \"7\"\n       \n    }\n\n    this.setState( {\n      quiz_data1 : [...this.state.quiz_data1,newObject]\n    } )\n\n  }\n\n    render(props) {\n\n      return (\n       <button onClick={this.addItem.bind(this) } >\n         blati\n       </button>\n         )\n    }\n\n  }\n\nexport default UpdateQuiz\n/* <form>\n        <label>\n          Question :\n          <input type=\"text\" name=\"name\" />\n        </label>\n\n        <input type=\"submit\" value=\"Envoyer\" />\n      </form>*/","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Quiz from './Quiz';\nimport UpdateQuiz from './UpdateQuiz';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction NavTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n        >\n          <LinkTab label=\"Quiz\" href=\"/drafts\" {...a11yProps(0)} />\n          <LinkTab label=\"Modify Quiz\" href=\"/trash\" {...a11yProps(1)} />\n          <LinkTab label=\"About us\" href=\"/spam\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={value} index={0}>\n       <Quiz ></Quiz>    \n      </TabPanel>\n      \n      <TabPanel value={value} index={1}>\n        <UpdateQuiz  quiz_data_global={props.quiz_data_global} ></UpdateQuiz>\n      </TabPanel>\n\n      <TabPanel value={value} index={2}>\n        Page Three\n      </TabPanel>\n    </div>\n  );\n}\n\nexport  default NavTabs","import React, { Component } from 'react'\nimport QuizQuestion from './QuizQuestion'\nimport QuizEnd from './QuizEnd'\nimport Home from './Home'\n\nlet quizData = require('./quiz_data.json')\n\nclass Quiz extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n             quiz_position : 1,\n             quiz_data1 : quizData\n        }\n      }\n \n      \n    render(props) {\n \n      return (\n      <Home quiz_data_global={this.state.quiz_data1}></Home>\n         \n         )\n    }\n\n  }\n\nexport default Quiz","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Quiz from './Quiz'\nimport Home from './Home'\nimport First from './First'\n\nfunction App() {\n  return (  <First></First>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}